class GameAnalytics{constructor(){this.sessionId=this.generateSessionId();this.events=[];this.plausibleEnabled=typeof plausible!=="undefined";this.gaEnabled=typeof gtag!=="undefined";this.init()}init(){this.trackEvent("page_load",{url:window.location.href,userAgent:navigator.userAgent,timestamp:(new Date).toISOString()});window.addEventListener("beforeunload",()=>{this.trackEvent("session_end",{duration:Date.now()-this.sessionStart});this.sendEvents()});this.sessionStart=Date.now();this.initFreeAnalytics()}initFreeAnalytics(){console.log("Free analytics initialized. Plausible:",this.plausibleEnabled,"GA:",this.gaEnabled)}generateSessionId(){return"session_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)}trackEvent(eventName,eventData={}){const event={sessionId:this.sessionId,eventName:eventName,eventData:eventData,timestamp:(new Date).toISOString()};this.events.push(event);console.log("Tracked event:",event);this.sendToFreeAnalytics(eventName,eventData);if(this.events.length>=10){this.sendEvents()}}sendToFreeAnalytics(eventName,eventData){if(this.plausibleEnabled){try{plausible(eventName,{props:eventData})}catch(e){console.log("Plausible error:",e)}}if(this.gaEnabled){try{gtag("event",eventName,eventData)}catch(e){console.log("GA error:",e)}}}sendEvents(){if(this.events.length===0)return;console.log("Analytics events batch:",this.events);try{const existingData=JSON.parse(localStorage.getItem("game_analytics")||"[]");const newData=existingData.concat(this.events);localStorage.setItem("game_analytics",JSON.stringify(newData.slice(-1e3)))}catch(e){console.log("Error saving analytics to localStorage:",e)}this.events=[]}trackGameStart(){this.trackEvent("game_start")}trackGameReset(){this.trackEvent("game_reset")}trackElementTap(elementType,level){this.trackEvent("element_tap",{elementType:elementType,level:level})}trackMerge(elementsMerged,newLevel){this.trackEvent("merge",{elementsMerged:elementsMerged,newLevel:newLevel})}trackPurchase(coinsSpent,itemPurchased){this.trackEvent("purchase",{coinsSpent:coinsSpent,itemPurchased:itemPurchased,coinBalance:window.game?window.game.coins:0})}trackAdWatched(){this.trackEvent("ad_watched",{coinReward:20})}trackCoinBalance(coins){this.trackEvent("coin_balance",{coins:coins})}trackScore(score){this.trackEvent("score_update",{score:score})}exportAnalytics(){try{const data=localStorage.getItem("game_analytics");if(data){const blob=new Blob([data],{type:"application/json"});const url=URL.createObjectURL(blob);const a=document.createElement("a");a.href=url;a.download="game_analytics.json";document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url)}}catch(e){console.log("Error exporting analytics:",e)}}}const analytics=new GameAnalytics;window.gameAnalytics=analytics;