class GameSecurity{constructor(){this.encryptionKey=this.generateKey();this.transactionSalt=this.generateSalt()}generateKey(){const chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let key="";for(let i=0;i<32;i++){key+=chars.charAt(Math.floor(Math.random()*chars.length))}return key}generateSalt(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)}xorEncrypt(text,key){let result="";for(let i=0;i<text.length;i++){result+=String.fromCharCode(text.charCodeAt(i)^key.charCodeAt(i%key.length))}return result}secureBase64Encode(data){const jsonString=typeof data==="object"?JSON.stringify(data):data;const encrypted=this.xorEncrypt(jsonString,this.encryptionKey);const salted=this.transactionSalt+encrypted+this.transactionSalt;return btoa(salted)}secureBase64Decode(encodedData){try{const salted=atob(encodedData);const encrypted=salted.substring(this.transactionSalt.length,salted.length-this.transactionSalt.length);const decrypted=this.xorEncrypt(encrypted,this.encryptionKey);try{return JSON.parse(decrypted)}catch(e){return decrypted}}catch(e){console.error("Decryption failed:",e);return null}}createHash(data){let hash=0;const str=typeof data==="object"?JSON.stringify(data):data;for(let i=0;i<str.length;i++){const char=str.charCodeAt(i);hash=(hash<<5)-hash+char;hash=hash&hash}return Math.abs(hash).toString(16)}verifyHash(data,hash){return this.createHash(data)===hash}signTransaction(transactionData){transactionData.timestamp=(new Date).toISOString();const hash=this.createHash(transactionData);const encoded=this.secureBase64Encode({data:transactionData,hash:hash});return{signedData:encoded,hash:hash}}verifyTransaction(signedData){try{const decoded=this.secureBase64Decode(signedData);if(!decoded||!decoded.data||!decoded.hash){return{valid:false,error:"Invalid transaction format"}}const isValid=this.verifyHash(decoded.data,decoded.hash);return{valid:isValid,data:decoded.data,error:isValid?null:"Data integrity check failed"}}catch(e){return{valid:false,error:"Transaction verification failed: "+e.message}}}generateSecureToken(){const data={sessionId:this.generateSalt(),timestamp:Date.now(),random:Math.random()};return this.secureBase64Encode(data)}validateToken(token){try{const decoded=this.secureBase64Decode(token);const now=Date.now();if(now-decoded.timestamp>36e5){return{valid:false,error:"Token expired"}}return{valid:true,data:decoded}}catch(e){return{valid:false,error:"Token validation failed"}}}}const gameSecurity=new GameSecurity;window.gameSecurity=gameSecurity;